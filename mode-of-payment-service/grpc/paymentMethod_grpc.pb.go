// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.20.1
// source: grpc/paymentMethod.proto

package mode_of_payment_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AddPaymentMethodServiceClient is the client API for AddPaymentMethodService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AddPaymentMethodServiceClient interface {
	AddPaymentMethod(ctx context.Context, in *PaymentMethod, opts ...grpc.CallOption) (*PaymentMethod, error)
}

type addPaymentMethodServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAddPaymentMethodServiceClient(cc grpc.ClientConnInterface) AddPaymentMethodServiceClient {
	return &addPaymentMethodServiceClient{cc}
}

func (c *addPaymentMethodServiceClient) AddPaymentMethod(ctx context.Context, in *PaymentMethod, opts ...grpc.CallOption) (*PaymentMethod, error) {
	out := new(PaymentMethod)
	err := c.cc.Invoke(ctx, "/mode_of_payment_service.AddPaymentMethodService/AddPaymentMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AddPaymentMethodServiceServer is the server API for AddPaymentMethodService service.
// All implementations must embed UnimplementedAddPaymentMethodServiceServer
// for forward compatibility
type AddPaymentMethodServiceServer interface {
	AddPaymentMethod(context.Context, *PaymentMethod) (*PaymentMethod, error)
	mustEmbedUnimplementedAddPaymentMethodServiceServer()
}

// UnimplementedAddPaymentMethodServiceServer must be embedded to have forward compatible implementations.
type UnimplementedAddPaymentMethodServiceServer struct {
}

func (UnimplementedAddPaymentMethodServiceServer) AddPaymentMethod(context.Context, *PaymentMethod) (*PaymentMethod, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPaymentMethod not implemented")
}
func (UnimplementedAddPaymentMethodServiceServer) mustEmbedUnimplementedAddPaymentMethodServiceServer() {
}

// UnsafeAddPaymentMethodServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AddPaymentMethodServiceServer will
// result in compilation errors.
type UnsafeAddPaymentMethodServiceServer interface {
	mustEmbedUnimplementedAddPaymentMethodServiceServer()
}

func RegisterAddPaymentMethodServiceServer(s grpc.ServiceRegistrar, srv AddPaymentMethodServiceServer) {
	s.RegisterService(&AddPaymentMethodService_ServiceDesc, srv)
}

func _AddPaymentMethodService_AddPaymentMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymentMethod)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddPaymentMethodServiceServer).AddPaymentMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mode_of_payment_service.AddPaymentMethodService/AddPaymentMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddPaymentMethodServiceServer).AddPaymentMethod(ctx, req.(*PaymentMethod))
	}
	return interceptor(ctx, in, info, handler)
}

// AddPaymentMethodService_ServiceDesc is the grpc.ServiceDesc for AddPaymentMethodService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AddPaymentMethodService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "mode_of_payment_service.AddPaymentMethodService",
	HandlerType: (*AddPaymentMethodServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddPaymentMethod",
			Handler:    _AddPaymentMethodService_AddPaymentMethod_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/paymentMethod.proto",
}
