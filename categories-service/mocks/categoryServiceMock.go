// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cdp-team3/categories-service/domain/services (interfaces: CategoryService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	app_erros "github.com/cdp-team3/categories-service/app-errors"
	models "github.com/cdp-team3/categories-service/domain/models"
	gomock "github.com/golang/mock/gomock"
)

// MockCategoryService is a mock of CategoryService interface.
type MockCategoryService struct {
	ctrl     *gomock.Controller
	recorder *MockCategoryServiceMockRecorder
}

// MockCategoryServiceMockRecorder is the mock recorder for MockCategoryService.
type MockCategoryServiceMockRecorder struct {
	mock *MockCategoryService
}

// NewMockCategoryService creates a new mock instance.
func NewMockCategoryService(ctrl *gomock.Controller) *MockCategoryService {
	mock := &MockCategoryService{ctrl: ctrl}
	mock.recorder = &MockCategoryServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCategoryService) EXPECT() *MockCategoryServiceMockRecorder {
	return m.recorder
}

// AddCategory mocks base method.
func (m *MockCategoryService) AddCategory(arg0 *models.Category) *app_erros.AppError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddCategory", arg0)
	ret0, _ := ret[0].(*app_erros.AppError)
	return ret0
}

// AddCategory indicates an expected call of AddCategory.
func (mr *MockCategoryServiceMockRecorder) AddCategory(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddCategory", reflect.TypeOf((*MockCategoryService)(nil).AddCategory), arg0)
}

// DeleteCategories mocks base method.
func (m *MockCategoryService) DeleteCategories(arg0 []string) (bool, *app_erros.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCategories", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(*app_erros.AppError)
	return ret0, ret1
}

// DeleteCategories indicates an expected call of DeleteCategories.
func (mr *MockCategoryServiceMockRecorder) DeleteCategories(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCategories", reflect.TypeOf((*MockCategoryService)(nil).DeleteCategories), arg0)
}

// DeleteCategoryByID mocks base method.
func (m *MockCategoryService) DeleteCategoryByID(arg0 string) (bool, *app_erros.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCategoryByID", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(*app_erros.AppError)
	return ret0, ret1
}

// DeleteCategoryByID indicates an expected call of DeleteCategoryByID.
func (mr *MockCategoryServiceMockRecorder) DeleteCategoryByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCategoryByID", reflect.TypeOf((*MockCategoryService)(nil).DeleteCategoryByID), arg0)
}

// GetAllCategory mocks base method.
func (m *MockCategoryService) GetAllCategory() ([]models.Category, *app_erros.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllCategory")
	ret0, _ := ret[0].([]models.Category)
	ret1, _ := ret[1].(*app_erros.AppError)
	return ret0, ret1
}

// GetAllCategory indicates an expected call of GetAllCategory.
func (mr *MockCategoryServiceMockRecorder) GetAllCategory() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllCategory", reflect.TypeOf((*MockCategoryService)(nil).GetAllCategory))
}

// GetCategory mocks base method.
func (m *MockCategoryService) GetCategory(arg0 string) (*models.Category, *app_erros.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCategory", arg0)
	ret0, _ := ret[0].(*models.Category)
	ret1, _ := ret[1].(*app_erros.AppError)
	return ret0, ret1
}

// GetCategory indicates an expected call of GetCategory.
func (mr *MockCategoryServiceMockRecorder) GetCategory(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCategory", reflect.TypeOf((*MockCategoryService)(nil).GetCategory), arg0)
}

// UpdateCategoryByID mocks base method.
func (m *MockCategoryService) UpdateCategoryByID(arg0 string, arg1 *models.Category) (bool, *app_erros.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateCategoryByID", arg0, arg1)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(*app_erros.AppError)
	return ret0, ret1
}

// UpdateCategoryByID indicates an expected call of UpdateCategoryByID.
func (mr *MockCategoryServiceMockRecorder) UpdateCategoryByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCategoryByID", reflect.TypeOf((*MockCategoryService)(nil).UpdateCategoryByID), arg0, arg1)
}
